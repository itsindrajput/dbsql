show databases;
use swiggy;
show tables;

INSERT INTO Users (name, email, phone, password, address) VALUES
('Ravi Kumar', 'ravi.kumar@gmail.com', '9876543210', 'pass@123', '123 MG Road, Bengaluru'),
('Priya Sharma', 'priya.sharma@yahoo.com', '9123456789', 'priya@456', 'Sector 22, Noida'),
('Amit Verma', 'amit.verma@rediffmail.com', '9988776655', 'amit789', 'Kothrud, Pune');

INSERT INTO Restaurants (name, email, phone, address, cuisine_type, rating, opening_time, closing_time) VALUES
('Tandoori Nights', 'tandoori@gmail.com', '9012345678', 'Lajpat Nagar, Delhi', 'North Indian', 4.2, '11:00:00', '23:00:00'),
('Dosa Express', 'dosaexpress@blr.com', '9112233445', 'Indiranagar, Bengaluru', 'South Indian', 4.5, '08:00:00', '22:00:00'),
('Biryani House', 'biryanihouse@hyd.in', '9123456677', 'Banjara Hills, Hyderabad', 'Hyderabadi', 4.3, '10:00:00', '23:30:00');

INSERT INTO Menu (r_id, name, description, price, category) VALUES
(1, 'Butter Chicken', 'Creamy chicken in rich tomato gravy', 320.00, 'Main Course'),
(1, 'Paneer Tikka', 'Grilled paneer with spices', 250.00, 'Starter'),
(2, 'Masala Dosa', 'Crispy dosa filled with potato masala', 100.00, 'Breakfast'),
(2, 'Filter Coffee', 'Authentic South Indian coffee', 40.00, 'Beverage'),
(3, 'Chicken Biryani', 'Spicy rice with chicken', 220.00, 'Main Course'),
(3, 'Double Ka Meetha', 'Traditional Hyderabadi dessert', 90.00, 'Dessert');

INSERT INTO Orders (u_id, r_id, total_amount, order_status, delivered_at) VALUES
(1, 1, 570.00, 'Delivered', '2025-04-10 13:45:00'),
(2, 2, 140.00, 'Delivered', '2025-04-11 09:15:00'),
(3, 3, 310.00, 'In Progress', NULL);

INSERT INTO DeliveryAgents (name, phone, current_status, assigned_area) VALUES
('Rakesh Yadav', '9876512345', 'Available', 'South Delhi'),
('Sunita Rao', '9988774411', 'On Delivery', 'Koramangala'),
('Imran Khan', '9111223344', 'Available', 'Charminar, Hyderabad');


INSERT INTO Payments (order_id, u_id, amount, payment_method, payment_status) VALUES
(1, 1, 570.00, 'UPI', 'Paid'),
(2, 2, 140.00, 'Cash on Delivery', 'Paid'),
(3, 3, 310.00, 'Credit Card', 'Pending');


INSERT INTO Reviews (u_id, r_id, rating, comment) VALUES
(1, 1, 5, 'Amazing butter chicken! Must try.'),
(2, 2, 4, 'Dosa was crispy and fresh. Coffee was nice.'),
(3, 3, 3, 'Biryani was average, but dessert was great.');


SELECT * FROM Users;
SELECT * FROM Restaurants;
SELECT * FROM Menu;
SELECT * FROM Orders;
SELECT * FROM DeliveryAgents;
SELECT * FROM Payments;
SELECT * FROM Reviews;


-- (a) Orders placed by a specific user (e.g., u_id = 1)
SELECT o.order_id, u.name AS user_name, r.name AS restaurant_name, m.name AS menu_item, m.price, o.order_status
FROM Orders o
JOIN Users u ON o.u_id = u.u_id
JOIN Restaurants r ON o.r_id = r.r_id
JOIN Menu m ON m.r_id = r.r_id
WHERE u.u_id = 1;

-- (b) Total revenue generated by each restaurant
SELECT r.name AS restaurant_name, SUM(o.total_amount) AS total_revenue
FROM Orders o JOIN Restaurants r ON o.r_id = r.r_id
GROUP BY r.name;

-- (c) Find the top 3 highest-priced menu items across all restaurants.
SELECT name AS menu_item, price, category, r_id
FROM Menu
ORDER BY price DESC
LIMIT 3;


-- (d) All pending payments with customer names and methods
SELECT u.name AS customer_name, p.payment_method, p.amount
FROM Payments p
JOIN Users u ON p.u_id = u.u_id
WHERE p.payment_status = 'Pending';

-- (e) All menu items from a specific restaurant (e.g., r_id = 1)
SELECT m.name, m.description, m.price, m.category
FROM Menu m
WHERE m.r_id = 1;

